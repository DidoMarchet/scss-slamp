/// Inspired by https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
/// @content @function slamp($minSize, $maxSize, $minLimit: null, $maxLimit: null){ ... }
/// @param {String} $minSize - required - the min size of the property (px, em, rem, vw, % [...])
/// @param {String} $maxSize - required - the max size of the property (px, em, rem, vw, % [...])
/// @param {String} $minLimit - optional - the min limit if different from default (px, em, rem, vw, % [...])
/// @param {String} $maxLimit - optional - the max limit if different from default (px, em, rem, vw, % [...])
/// @return {String} - clamp($minSize[rem], $intersection[rem] + ($slope * 100)[vw], $maxSize[rem])

@function slamp($minSize, $maxSize, $minLimit: null, $maxLimit: null, $digits: 2) {
  $merged: map.merge($defaults_slamp_options, $slamp_options);

  $minSizeRem: if(is-rem($minSize), $minSize, rem($minSize));
  $maxSizeRem: if(is-rem($maxSize), $maxSize, rem($maxSize));

  $minLimitRem: rem(map.get($merged, 'min'));
  @if ($minLimit){
    $minLimitRem: if(is-rem($minLimit), $minLimit,  rem($minLimit));
  }

  $maxLimitRem: rem(map.get($merged, 'max'));
  @if ($maxLimit){
    $maxLimitRem: if(is-rem($maxLimit), $maxLimit,  rem($maxLimit));
  }

  $slope: math.div(num($maxSizeRem) - num($minSizeRem), num($maxLimitRem) - num($minLimitRem));
  $intersection: (-1 * num($minLimitRem)) * $slope + num($minSizeRem);

  $roundedIntersection: round-value($intersection, $digits);
  $roundedSlope: round-value($slope * 100, $digits);

  @if $roundedIntersection != 0 {
    @return clamp(#{$minSizeRem}, #{rem($roundedIntersection)} + #{$roundedSlope}vw, #{$maxSizeRem});
  } @else {
    @return clamp(#{$minSizeRem}, #{$roundedSlope}vw, #{$maxSizeRem});
  }
}